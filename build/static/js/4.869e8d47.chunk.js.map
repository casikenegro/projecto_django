{"version":3,"sources":["hooks/authorizationHook.js","components/UserInterface/DefaultFooter.js","components/DeviceSection/FieldSearch/index.js","components/DeviceSection/DeviceList/DeviceItemTable/Item.js","components/DeviceSection/DeviceList/DeviceItemTable/index.js","components/DeviceSection/DeviceList/layouts/TableLayout/index.js","components/DeviceSection/DeviceList/layouts/TableLayout/Header.js","components/DeviceSection/DeviceList/layouts/TableLayout/Body.js","components/DeviceSection/DeviceList/layouts/DropdownLayout/index.js","components/DeviceSection/DeviceList/index.js","components/DeviceSection/ButtonsOperation.js","components/DeviceSection/index.js","views/UserInterfacePage/SectionDevicesView.js","components/SectionDeviceRegister/FormDevice/index.js","components/SectionDeviceRegister/index.js","views/UserInterfacePage/FormDeviceView.js","components/Map/IconMarker.js","components/Map/index.js","components/OperationSection/SectionValueToMap.js","components/OperationSection/SectionTracking/panelOptions.js","components/OperationSection/SectionTracking/index.js","views/UserInterfacePage/OperationSectionView/SectionTrackingView/index.js","components/OperationSection/SectionValueInModule.js","components/OperationSection/index.js","views/UserInterfacePage/OperationSectionView/index.js","components/Dashboard/Dashboard.js"],"names":["authorizationHook","WrapComponent","authorizationComponent","_Component","Object","_root_Escritorio_proyecto_darwin_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_root_Escritorio_proyecto_darwin_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_root_Escritorio_proyecto_darwin_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_root_Escritorio_proyecto_darwin_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_root_Escritorio_proyecto_darwin_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","isSuperuser","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","antd__WEBPACK_IMPORTED_MODULE_7__","type","Component","connect","state","data_user","role","DefaultFooter","_this$props","children","_root_Escritorio_proyecto_darwin_tracking_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","Fragment","href","className","defaultProps","Search","Input","Option","Select","SearchField","react_default","es_select","defaultValue","id","style","width","marginBottom","size","onChange","handleFilter","placeholder","envolveTd","data","Item","_ref","values","_ref$forDefault","forDefault","_ref$optionStyle","optionStyle","toRender","console","log","Array","isArray","toSelect","name","envolveSelect","map","styles","Item_Option","DeviceItemTable","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","selectDevice","getItemChildrenLayoutRenderDevice","bind","assertThisInitialized","getDataOptionDevice","getDataColumnsDevice","DeviceItemTable_Option","_this$props2","SelectOp","Item_Item","typee","date_register","status","es_button","disabled","onClick","background","border","icon","data_render","TableLayout","reactstrap_es","responsive","striped","Header","Body","DropdownLayout","selected","DeviceList","getColumnsDevices","columns_header","columnOperation","column","getDevices","devices","deviceOperation","getSimpleList","devices_name","getItem","device","DeviceList_DeviceItemTable","filter","getTable","getSelect","Data","PureComponent","ButtonsOperation","color","fontColor","backgroundColor","borderColor","DeviceSection","getColums","handleClickRegister","visible_form","setVisibleForm","getButtonsOperations","row","gutter","col","span","DeviceSection_ButtonsOperation","getCardTable","margin","FieldSearch","handleChangeSearch","DeviceSection_DeviceList","card","visible","SectionDevicesView","componentDidMount","getDevicesFromServer","target","setFilterSearchDevice","isDeviceInList","regex","filter_search","toUpperCase","search","toPairs","length","src_components_DeviceSection","mapDispatchToProps","setDevices","visible_form_device","Form","tooltip","title","FormDevice_Option","create","onHandleSubmit","es_form","onSubmit","FormDevice_Item","input","maxLength","htmlType","SectionDeviceRegister","onCancel","modal","centered","footer","align","SectionDeviceRegister_FormDevice","onSubmitDevice","FormDeviceView","e","preventDefault","document","getElementsByName","fetchCreateDevice","SectionDeviceRegister_SectionDeviceRegister","React","library","add","faMapMarker","faTabletAlt","colorMarker","RandomColor","IconMarker","react_fontawesome_index_es","position","bottom","left","iconMarkup","renderToStaticMarkup","optionRender","divIcon","html","MapDevices","positions","coordenate","lat","lon","Map","center","zoom","TileLayer","url","Marker","Popup","Polyline","SectionValueToMap","offset","components_Map","panelOptions","handleChangeDateTime","htmlFor","xs","md","lg","xl","panel","SectionTracking","justify","SectionTracking_panelOptions","SectionTrackingView","componentWillMount","prevProps","nextProps","getLastPosition","device_selected","validateRangeDate","RegExp","test","firstDateTime","secondDateTime","setDeviceRanges","obtainDate","date","Date","obtainSplitDate","split","datetime","datePosition","first","final","forceUpdate","validInput","evt","isFullInputsDate","isValidRangeDates","getArrayDevices","addRanges","OperationSection_SectionTracking","getIntervalPosition","SectionValueInModule","TabPane","Tabs","tabs","Module","OperationSection","device_name","data_device","defaultTabPane","defaultActiveKey","activeKey","_ref2","default_activate","type_device","tab","es_icon","OperationSectionView","components_OperationSection","Dashboard","loading","UserInterfacePage_SectionDevicesView","sm","UserInterfacePage_FormDeviceView","UserInterfacePage_OperationSectionView"],"mappings":"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","file":"static/js/4.869e8d47.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Icon } from 'antd'\n\nconst authorizationHook = WrapComponent => {\n    class authorizationComponent extends Component{\n        render(){\n\n            const authorized = this.props.isSuperuser\n            \n            return(\n                authorized && <WrapComponent {...this.props} /> || <Icon type = 'loading' />\n            )\n        }\n    }\n\n    const mapStateToProps = state => ({\n        isSuperuser : state.data_user.role\n    })\n\n    return connect(mapStateToProps, null)(authorizationComponent)\n}\n\nexport default authorizationHook\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultFooter extends Component {\n  render() {\n\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n\n    return (\n      <React.Fragment>\n        <span><a href=\"https://coreui.io\">CoreUI</a> &copy; 2018 creativeLabs.</span>\n        <span className=\"ml-auto\">Powered by <a href=\"https://coreui.io/react\">CoreUI for React</a></span>\n      </React.Fragment>\n    );\n  }\n}\n\nDefaultFooter.propTypes = propTypes;\nDefaultFooter.defaultProps = defaultProps;\n\nexport default DefaultFooter;\n","import React from 'react'\nimport './../index.sass'\nimport { Input, Select } from 'antd'\n\nconst Search = Input.Search\nconst Option = Select.Option\n\n\nconst TypesDevice = (\n    <Select \n        defaultValue = 'G'>\n        <Option value = 'G'>\n            G\n        </Option>\n        <Option value = 'P'>\n            P\n        </Option>\n        <Option value = 'M'>\n            M\n        </Option>\n    </Select>\n)\n\nconst SearchField = props => (    \n        <Search \n            id = 'SearchFieldDevice'\n            style = {{width: 500, marginBottom: 20}}\n            size = 'large'\n            onChange = { props.handleFilter }\n            placeholder = 'Introduce el serial de dipositivo'\n        />\n)\n\nexport default SearchField","import React from 'react'\nimport { Select } from 'antd';\n\nconst Option = Select.Option\n\nconst envolveTd = data => (\n    <td>\n        {data}\n    </td>\n)\n\nconst createOption = (data, styles) => (\n    <Option\n        value = { data }\n        style = { styles }    \n    >\n        {data}\n    </Option>\n)\n\nconst envolveSelect = (data, forDefault) => (\n    <Select\n        style = {{ width : 120 }}\n        defaultValue = { forDefault }\n        name=\"status\"       \n        className=\"status\"\n    >\n\n    { data }\n\n    </Select>\n)\n\nexport const Item = ({type, values, forDefault = null, optionStyle = null}) => {\n    var toRender = null\n    \n    console.log(values)\n    if(type === 'simple' && typeof values === 'string')\n        toRender = envolveTd(values)\n        \n\n    if(type === 'select' && Array.isArray(values) && forDefault){\n        \n        let valueToSelect = values.map(value => {\n            let option = createOption(value, optionStyle)\n\n            return option\n        })\n\n        let toSelect = envolveSelect(valueToSelect, forDefault)\n\n        toRender = envolveTd(toSelect)\n    }\n\n    return toRender\n}","import React, { Component } from 'react'\nimport { Button, Select } from 'antd'\nimport authorizationHook from '../../../../hooks/authorizationHook'\nimport { Item } from './Item'\n\nconst Option = Select.Option\n\nconst optionStyle = {\n  width : '100px'\n}\n\nclass DeviceItemTable extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.getItemChildrenLayoutRenderDevice = this.getItemChildrenLayoutRenderDevice.bind(this)\n\n    this.getDataOptionDevice = this.getDataOptionDevice.bind(this)\n    this.getDataColumnsDevice = this.getDataColumnsDevice.bind(this)\n\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  getDataOptionDevice(){\n    \n    const { name } = this.props \n\n    return (\n      <Option \n        key = { name }\n        value = { name }\n        >\n        { name }\n      </Option>\n    )\n  }\n\n  handleClick = () => {\n    const { name, selectDevice } = this.props\n    \n    selectDevice(name)\n  }\n\n  getDataColumnsDevice(){\n\n    const { data, name } = this.props \n\n    const selectOperation = (status) => (\n      <td>\n          <Select\n            style = {{ width : 120 }}\n            defaultValue = {data.status === 'H'?\"ACTIVE\":\"INACTIVE\"}\n            name=\"status\"       \n            id=\"status\">\n\n              <Option\n                style = { optionStyle }\n                value=\"ACTIVE\">ACTIVO\n              </Option>\n\n              <Option\n                style = { optionStyle }\n                value=\"INACTIVE\">INACTIVO\n              </Option>\n          </Select>\n        </td>\n    )\n\n    const SelectOp = authorizationHook(Item)\n\n    return(\n\n      <>\n        <Item\n          type = 'simple' \n          values = { name }  \n        />\n        <Item\n          type = 'simple' \n          values = { data.typee }  \n        />\n        <Item\n          type = 'simple' \n          values = { data.date_register }  \n        />\n\n        <SelectOp \n          type = 'select'\n          forDefault = {data.status}\n          optionStyle = {{ width : '100px' }}\n          values = { ['ACTIVO', 'INACTIVO'] }\n        />\n        \n\n        <td>\n          <Button \n            disabled = { data.status === 'ACTIVO' ? false : true}\n            onClick = { this.handleClick }\n            style = {{ background : 'none', border: 'none'}}\n            icon = 'eye' />\n        </td>\n      </>\n    )\n  }\n\n  getItemChildrenLayoutRenderDevice(){\n   \n    return this.props.type === 'row-table'\n      ? this.getDataColumnsDevice()\n      : this.getDataOptionDevice()\n  }\n\n  render() {\n    console.log(this.props.type)\n    const data_render = this.getItemChildrenLayoutRenderDevice() \n \n    return (\n      <>{ data_render }</>\n    )\n  }\n}\n\nexport default DeviceItemTable\n","import React, { Component } from 'react'\nimport { Table } from 'reactstrap'\nimport { Header as _Header } from './Header'\nimport { Body as _Body } from './Body'\n\nconst TableLayout = ({ children }) => (\n    <Table responsive striped>\n        { children }\n    </Table>\n)\n\nTableLayout.Header = _Header\nTableLayout.Body = _Body\n\nexport default TableLayout ","import React from 'react'\n\nconst Header = ({ children }) => (\n    <thead>\n        <tr> \n            { children }\n        </tr>\n  </thead>\n)\n\nexport { Header }","import React from 'react'\n\nconst Body = ({ children }) => (\n    <tbody>\n        { children }        \n    </tbody>\n)\n\nexport { Body }","import React from 'react'\nimport { Select } from 'antd'\nimport { DEVICES as devices} from './../../../../../constants/withPanel'\nconst Option = Select.Option\n\nconst getDevice = () => (\n    devices.map((device) => (<Option \n        key =  { device.code}\n        value = { device.code}\n        style = {{ width : '300px' }}\n        >\n        { device.code}\n      </Option>))\n)\nconst DropdownLayout = (props) => {\n\n    return(\n        <Select\n            onChange = { props.selectDevice }\n            name = 'select-device'\n            id = 'select-device'\n            defaultValue = { props.selected }>\n            { props.children }\n        </Select>\n    )\n}\n\nexport default DropdownLayout","import React, { PureComponent } from 'react'\nimport DeviceItemTable from './DeviceItemTable'\nimport TableLayout from './layouts/TableLayout'\nimport { Select } from 'antd'\nimport DropdownLayout from './layouts/DropdownLayout'\n\nclass DeviceList extends PureComponent {\n\n  constructor(props){\n\n    super(props)\n\n    this.getColumnsDevices = this.getColumnsDevices.bind(this)\n    this.columnOperation = this.columnOperation.bind(this)\n\n    this.getDevices = this.getDevices.bind(this)\n    this.deviceOperation = this.deviceOperation.bind(this)\n\n    this.getTable = this.getTable.bind(this)\n    this.getSelect = this.getSelect.bind(this)\n\n    this.getItem = this.getItem.bind(this)\n  }\n\n  getColumnsDevices = () => (\n    this.props.columns_header && this.props.columns_header.map(this.columnOperation)\n  )\n\n  columnOperation = column => (<th key = {column}>{ column }</th>)\n\n  getDevices = () => (\n    this.props.devices && this.props.devices.map(this.deviceOperation)\n  )\n\n  getSimpleList = (devices_name) => (\n    <Select.Option value = { devices_name }>{ devices_name }</Select.Option>\n  )\n\n  getItem = device => {\n    return(\n      this.props.type === 'table' ?<DeviceItemTable\n          selectDevice = { this.props.selectDevice } \n          key = { device[0] } \n          name = { device[0] }\n          data = { device[1] }\n          type = { 'row-' + this.props.type }  \n        />: this.getSimpleList(device[0])\n    )\n  }\n\n  deviceOperation = device => {\n    let Item = null\n   \n    if(!this.props.filter || (device[0][0] === this.props.filter))\n      Item = this.getItem(device)\n\n    return this.props.type  === 'table'\n      ? <tr>{ Item }</tr>\n      : Item\n  }\n\n  getTable = TableLayout => (\n    <TableLayout>\n      <TableLayout.Header>\n        { this.getColumnsDevices() }\n      </TableLayout.Header>\n      <TableLayout.Body>\n        { this.getDevices() }\n      </TableLayout.Body>\n    </TableLayout>\n  )\n\n  getSelect = DropdownLayout => (\n    <DropdownLayout\n      selectDevice = { this.props.selectDevice }\n      selected = { this.props.selected }\n      >\n      { this.getDevices() }\n    </DropdownLayout>\n  )\n\n  render() {\n    \n    let Data = null\n  \n    if(this.props.type === 'table')\n\n      Data = this.getTable(TableLayout)\n\n    else if(this.props.type === 'select')\n  \n      Data = this.getSelect(DropdownLayout)\n         \n    return (  \n      <>{ Data }</>\n    )\n  }\n}\n\nexport default DeviceList\n","import React from 'react'\nimport { Button } from 'antd'\n\nconst ButtonsOperation = ({ icon, color, value, onClick, type, fontColor }) => (\n    <Button\n        style = {{ backgroundColor : color, color : fontColor, borderColor: color }}\n        size = 'large'\n        type = { type }\n        icon = { icon }\n        onClick = { onClick }\n        >\n    \n        { value }\n    </Button>\n)\n\nexport default ButtonsOperation\n","import React, { Component } from 'react'\n\nimport SearchComponent from './FieldSearch'\nimport DeviceList from './DeviceList'\nimport { Card, CardHeader, CardBody } from 'reactstrap'\nimport ButtonOperation from './ButtonsOperation'\nimport { Row, Col } from 'antd'\n\nimport  { DEVICES } from './../../constants/withPanel'\n\nclass DeviceSection extends Component {\n\n  constructor(props){\n\n    super(props)\n\n    this.getButtonsOperations = this.getButtonsOperations.bind(this)\n    this.getCardTable = this.getCardTable.bind(this)\n    this.handleClickRegister = this.handleClickRegister.bind(this)\n    this.getColums = this.getColums.bind(this)\n  }\n\n  getColums = () => (\n    this.props.role\n      ? [\n        'Codigo',\n        'Tipo',\n        'Fecha de registro',\n        'Estado',\n        ''\n      ]\n\n      : [\n        'Codigo',\n        'Tipo',\n        'Fecha de registro',\n        ''\n      ]\n  )\n\n  handleClickRegister = () => (\n    this.props.visible_form \n        ? this.props.setVisibleForm(false)\n        : this.props.setVisibleForm(true)\n  )\n\n  getButtonsOperations = () => (\n    <Row gutter = { 10 }>\n      <Col span = { 4 }>\n        <ButtonOperation \n          value = 'Registrar'\n          icon = \"plus-circle\"\n          color = \"ghost-primary\"\n          onClick = { this.handleClickRegister }\n          type = 'primary'\n        />\n      </Col>\n      <Col span = { 4 }>\n        <ButtonOperation \n          value = 'Comprar'\n          icon = \"shopping\"\n          color = \"#fadb14\"\n          fontColor = 'black'\n          onClick = { null }\n          type = 'primary'\n        />\n      </Col>\n    </Row>\n  )\n  \n  getCardTable = () => {\n\n    const { devices } = this.props\n\n    return(\n      <Card style = {{ width : '1000px', margin : 'auto' }}>\n        <CardHeader>\n          Dispositivos Registrados\n        </CardHeader>\n        <CardBody>   \n            <SearchComponent handleFilter = { this.props.handleChangeSearch } />        \n          <DeviceList\n            columns_header = { this.getColums() }\n            devices = { devices }\n            type = 'table'\n            selectDevice = { this.props.selectDevice }\n          />\n          { this.getButtonsOperations() }\n        </CardBody>\n      </Card>\n    )\n  }\n\n  render(){\n\n    const card = this.props.visible\n      ? this.getCardTable()\n      : this.getButtonsOperations()\n\n    return(\n      <>{ card }</>\n    )\n  }\n}\n\nexport default DeviceSection","import React, { Component } from 'react'\nimport DeviceSection from './../../components/DeviceSection'\nimport { connect } from 'react-redux'\nimport { DEVICES, URL_DEVICE } from './../../constants/withPanel'\nimport {\n    setFilterSearchDevice,\n    setVisibleForm,\n    setDevices,\n    selectDevice,\n    getDevicesFromServer\n} from './../../actions/DeviceActions'\n\nimport toPairs from 'lodash.topairs'\n\nclass SectionDevicesView extends Component {\n\n    componentDidMount = () => {\n        if(!this.props.device)\n            this.props.getDevicesFromServer()\n    } \n\n    constructor(props){\n        super(props)\n\n        this.handleChangeSearch = this.handleChangeSearch.bind(this)\n\n        this.getDevices = this.getDevices.bind(this)\n    }\n\n    handleChangeSearch = ({ target }) => {\n        let { value } = target\n    \n        this.props.setFilterSearchDevice(value)\n    }\n\n    isDeviceInList = (device) => {\n\n        const regex = this.props.filter_search.toUpperCase()\n        return device[0].search(regex) > -1\n    }\n\n    getDevices = () => (\n        toPairs(this.props.devices)\n    )\n\n    render() {\n        \n        let filter = this.props.filter_search\n        let devices = ( filter === '' && this.getDevices())\n            || (filter !== '' && this.getDevices().filter(this.isDeviceInList))\n\n        let visible = this.getDevices().length > 0 ? true : false\n\n        return (\n            <DeviceSection\n                role = { this.props.role }\n                devices = { devices }\n                handleChangeSearch = { this.handleChangeSearch }   \n                visible_form = { this.props.visible_form }\n                setVisibleForm = { this.props.setVisibleForm }\n                visible = { visible }\n                selectDevice = { this.props.selectDevice }\n            />\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    role : state.data_user.role,\n    devices : state.devices,\n    filter_search : state.filter_search,\n    visible_form : state.visible_form_device,\n})\n\nconst mapDispatchToProps = {\n    setFilterSearchDevice,\n    setVisibleForm,\n    setDevices,\n    selectDevice,\n    getDevicesFromServer\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionDevicesView)\n","import React from 'react'\nimport { Form, Input, Select, Button, Tooltip } from 'antd'\nimport './styles.sass'\n\nconst Item = Form.Item\nconst Option = Select.Option\nconst description_type = \n        \"Tipo de dispositivo\\n\\G : valor en modulo\\n\\P = valor en mapa\\n\\S = seguimientos\"\n\nconst type_in_serial = (\n    <Tooltip title = { description_type }>\n        <Select defaultValue = 'G'>\n            <Option value = 'G'>G</Option>\n            <Option value = 'P'>P</Option>\n            <Option value = 'S'>S</Option>\n        </Select>\n    </Tooltip>\n)\n\nconst FormDevice = ({ onHandleSubmit }) => (\n    <Form className = 'register-device'\n        onSubmit = { onHandleSubmit }\n        \n    >\n        <Item>\n            <Input\n                name = 'input-create-device'\n                type = 'text'\n                maxLength = { 4 }\n                placeholder = 'Serial'\n            />\n        </Item>\n\n        <Item>\n            <Button\n                htmlType = 'submit' >\n                Registrar\n            </Button>\n        </Item>\n    </Form>\n  \n)\n\nexport default Form.create()(FormDevice)\n","import React, { Component } from 'react'\nimport { Modal, Row, Col } from 'antd'\nimport FormDevice from './FormDevice'\n\nexport default class SectionDeviceRegister extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.onCancel = this.onCancel.bind(this) \n  }\n\n  onCancel = () => {\n    this.props.setVisibleForm(false)\n  }\n\n  render() {\n    return (\n      <Modal\n        width = '500px'\n        centered\n        visible = { this.props.visible_form }\n        footer = { null }\n        onCancel = { this.onCancel }\n        > \n        <h3>Registra un dispositivo</h3>\n        <Row align = 'center'>\n          <Col span = { 20 }>\n            <FormDevice onHandleSubmit = { this.props.onSubmitDevice }/>\n          </Col>\n        </Row>\n      </Modal>\n    )\n  }\n}\n","import React from 'react'\nimport SectionDeviceRegister from './../../components/SectionDeviceRegister'\n\nimport { connect } from 'react-redux'\n\nimport {\n    setVisibleForm,\n    fetchCreateDevice\n} from './../../actions/DeviceActions'\n\nclass FormDeviceView extends React.Component{\n  onSubmitDevice = (e) => {\n    \n    e.preventDefault()\n    \n    let device = document.getElementsByName('input-create-device')[0].value\n    console.log(\"contenido de input : \" + device)\n    this.props.fetchCreateDevice(device)\n\n  }\n\n  render(){\n    return(\n        <SectionDeviceRegister\n            visible_form = { this.props.visible_form }\n            setVisibleForm = { this.props.setVisibleForm }\n            onSubmitDevice = { this.onSubmitDevice }\n        />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n    visible_form : state.visible_form_device,\n\n})\n\nconst mapDispatchToProps = {\n    setVisibleForm,\n    fetchCreateDevice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDeviceView)\n","import React from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { renderToStaticMarkup } from 'react-dom/server'\nimport { divIcon } from 'leaflet'\nimport { \n    faMapMarker,\n    faTabletAlt\n} from '@fortawesome/free-solid-svg-icons'\n\nimport RandomColor from 'randomcolor'\n\nlibrary.add(faMapMarker)\nlibrary.add(faTabletAlt)\n\nconst stylesCenter = { \n    position: 'absolute',\n    left : '1px',\n    bottom : '250%'\n}\n\nconst styleMarker = {\n    position : 'absolute',\n    bottom : '100%',\n    left : '-7px'\n}\n\nconst colorMarker = RandomColor()\n\nconst IconMarker = (\n    <div>\n        <FontAwesomeIcon\n            icon = { faMapMarker }\n            color = { colorMarker }\n            size = '3x'\n            style = { styleMarker }\n        />\n           <FontAwesomeIcon\n            icon = { faTabletAlt }\n            color = 'white'\n            size = '1x'\n            style = { stylesCenter }\n        />\n     \n    </div>\n)\n\nconst iconMarkup = renderToStaticMarkup(IconMarker)\nconst optionRender = divIcon({\n    html: iconMarkup,\n})\n\nexport default optionRender","import React from 'react'\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'\nimport IconMarker from './IconMarker'\n\nimport 'leaflet/dist/leaflet.css'\n\n\n\nconst MapDevices = ({ positions }) => {\n    \n    let last_index = null\n    let position = null\n\n    if (Array.isArray(positions)){\n        last_index = positions.length - 1\n        position = positions[last_index]\n    }else\n        position = positions\n\n    const coordenate = positions && [position.lat, position.lon]\n    \n    return(\n        <Map\n            className = 'map element-operation'\n            center = { coordenate || [51.0009, -0.0009] }\n            zoom = { 13 }>\n\n            <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n\n            <Marker \n                icon = { IconMarker }\n                position = { coordenate }>\n                 <Popup>A pretty CSS3 popup.<br />Easily customizable.</Popup>\n            </Marker>\n\n            <Polyline\n                positions = {positions}\n                color = '#F9B451'\n            />\n        </Map>\n    )\n}\n\nexport default MapDevices","import React from 'react'\nimport Map from './../../components/Map'\nimport { Row, Col } from 'antd'\n\nconst SectionValueToMap = () => {\n  return (\n    <div>\n      <Row gutter = { 24 }>\n        <Col span = { 20 } offset = { 4}>\n          <Map />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default SectionValueToMap\n","import React from 'react'\nimport { Input, Button, Row, Col } from 'antd'\nimport DeviceList from './../../DeviceSection/DeviceList'\n\nconst panelOptions = ({ devices, selected, handleChangeDateTime, selectDevice }) => {\n  \n  return (\n    <div className = 'panel-options element-operation'>\n      <DeviceList \n        type = 'select'\n        devices = { devices }\n        selectDevice = { selectDevice }\n        selected = { selected }\n        filter = 'S'\n      />\n      <Row gutter = { 15 } >\n        <Col span = { 3 }>\n          <label htmlFor = 'fi'>Inicio</label>\n        </Col>\n        <Col offset = { 3 }>\n          <Input\n              id = 'fi'\n              name = 'fi'\n              className = 'input-panel-operation'\n              onChange = { handleChangeDateTime }\n              type = 'datetime'\n          />\n        </Col>\n      </Row>\n      <Row  gutter = { 15 } >\n        <Col  span = { 3 } >\n          <label htmlFor = 'ff'>Final</label>\n        </Col>\n        <Col offset = { 3 }>\n          <Input\n              id = 'ff'\n              name = 'ff'\n              className = 'input-panel-operation'\n              \n              onChange = { handleChangeDateTime }\n              type = 'datetime'\n          />\n        </Col>\n      </Row>\n\n        <Button>Agregar Rango</Button>\n    </div>\n  )\n}\n\n\n\nexport default panelOptions\n","import React from 'react'\nimport Map from './../../../components/Map'\nimport PanelOptions from './panelOptions'\nimport { Row, Col } from 'antd'\n\nconst map = {\n  xs : 24,\n  md : 24,\n  lg : 12,\n  xl : 16\n}\n\nconst panel = {\n  xs : 24,\n  md : 24,\n  lg : 12,\n  xl : 8\n}\n\n\nconst SectionTracking = ({ devices, positions, selected, handleChangeDateTime, selectDevice }) => {\n\n  return (\n    <div>\n      <Row gutter = { 24 } justify = 'space-between' align = 'center' >\n        <Col { ...panel }>\n          <PanelOptions\n            handleChangeDateTime = { handleChangeDateTime }\n            selected = { selected }\n            selectDevice = { selectDevice }\n            devices = { devices }\n          /> \n        </Col>\n        <Col { ...map }>\n           { positions && <Map positions = { positions } />}\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\n\nexport default SectionTracking\n","import React, { Component } from 'react'\nimport SectionTracking from './../../../../components/OperationSection/SectionTracking'\nimport { connect } from 'react-redux'\nimport toPairs from 'lodash.topairs'\nimport { POSITIONS } from './../../../../constants/withPanel'\nimport { \n  selectDevice,\n  getLastPosition,\n  getIntervalPosition\n} from './../../../../actions/DeviceActions'\n\nclass SectionTrackingView extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.firstDateTime = null\n    this.secondDateTime = null\n    this.getArrayDevices = this.getArrayDevices.bind(this)\n\n    this.handleChangeDateTime.bind(this)\n    this.validateRangeDate = this.validateRangeDate.bind(this)\n    this.selectDevice = this.selectDevice.bind(this)\n\n    this.validInput = this.validInput.bind(this)\n\n    this.positions = null\n  }\n\n  componentWillMount = (prevProps, nextProps) => {\n   console.log(prevProps)\n   console.log(nextProps)\n  }\n\n  componentDidMount = () => {\n    this.props.getLastPosition(this.props.device_selected)\n  }\n\n  validateRangeDate = () => {\n\n    const regex = new RegExp(\"^([0-2][0-9]|3[0-1])/(0[1-9]|1[0-2])/(2[0-9]{3}) ([0-1][0-9]|2[0-3]):([0-5][0-9])$\")\n    \n    if(regex.test(this.firstDateTime) && regex.test(this.secondDateTime)){\n       \n      this.setDeviceRanges()\n\n      return true\n    }else\n      return false\n    \n  }\n\n  obtainDate = date => (\n    new Date(date[0], date[1], date[2], date[3], date[4])\n  )\n  obtainSplitDate = (date, regex) => (\n    date.split(regex)\n  )\n\n  setDeviceRanges = () => {\n\n    const regex = new RegExp('[/ :]')\n\n      this.positions = this.props.positions.filter(position => {\n      \n      let a = this.obtainSplitDate(position.datetime, regex)\n      \n      let datePosition = this.obtainDate(a)\n\n      a = this.obtainSplitDate(this.firstDateTime, regex)\n\n      let first = this.obtainDate(a)\n\n      a = this.obtainSplitDate(this.secondDateTime, regex)\n\n      let final = this.obtainDate(a)\n  \n      return (first <= datePosition && final >= datePosition)\n    })\n\n    this.forceUpdate()\n  }\n\n  validInput = () => (\n    this.firstDateTime && this.secondDateTime\n  )\n\n  handleChangeDateTime = (evt) => {\n    \n    evt.target.name === 'fi'\n      ? this.firstDateTime = evt.target.value\n      : this.secondDateTime = evt.target.value\n  \n    let isFullInputsDate = this.validInput()\n    let isValidRangeDates = this.validateRangeDate()\n    \n    if(isFullInputsDate)\n      this.positions = null\n\n    if(isFullInputsDate && isValidRangeDates)\n      this.setDeviceRanges()\n  }\n\n  getArrayDevices = () => (\n    toPairs(this.props.devices)\n  )\n\n  selectDevice = value => {\n    this.props.selectDevice(value)\n    this.positions = null\n    this.forceUpdate()\n  }\n\n  addRanges = (evt) => {\n\n  }\n\n  render() {\n   \n    let positions = this.positions || this.props.positions[this.props.positions.length - 1]\n  \n    return (\n      <SectionTracking\n        devices = { this.getArrayDevices() }\n        positions = { positions }\n        selectDevice = { this.selectDevice }\n        selected = { this.props.selected }\n        handleChangeDateTime = { this.handleChangeDateTime }\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  devices : state.devices,\n  selected : state.device_selected,\n  positions : state.positions[state.device_selected],\n})\n\nconst mapDispatchToProps = {\n  selectDevice,\n  getLastPosition,\n  getIntervalPosition\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionTrackingView)\n","import React from 'react'\n\nconst SectionValueInModule = () => (\n\n    <div>\n      \n    </div>\n\n)\n\nexport default SectionValueInModule\n","import React from 'react'\nimport { Tabs, Icon } from 'antd'\nimport SectionValueToMap from './SectionValueToMap'\nimport SectionTrackingView from './../../views/UserInterfacePage/OperationSectionView/SectionTrackingView'\nimport SectionValueInModule from './SectionValueInModule'\n\nimport './styles.css'\n\nconst TabPane  = Tabs.TabPane\n\nconst getDisabled = (default_activate, type_device) => (\n    default_activate !== type_device? true : false\n)\n\nconst tabs = [\n    {\n        title : 'Valor en mapa',\n        type : 'M',\n        icon : 'eye',\n        Module : SectionValueToMap\n    },\n    {\n        title : 'Seguimiento',\n        type : 'S',\n        icon : 'fall',\n        Module : SectionTrackingView\n    },\n    {\n        title : 'Valor en Modulo',\n        type : 'G',\n        icon : 'tablet',\n        Module : SectionValueInModule\n    }\n]\n\nconst OperationSection = ({device_name, data_device}) => {\n\n    const defaultTabPane = (data_device && data_device.status === 'ACTIVE' && data_device.type)\n    console.log(defaultTabPane)\n    return(\n        <Tabs \n            className = 'operation-section'\n            defaultActiveKey = { defaultTabPane } \n            activeKey = { defaultTabPane } \n        >                \n            { tabs.map(({type, icon, Module, title}) => (\n                <TabPane\n                    key = { type } \n                    tab = {<span><Icon type = {icon} /> { title } </span>}\n                    disabled = { getDisabled(defaultTabPane, type) } >\n                    <Module />\n                </TabPane>\n            )) }\n        </Tabs>\n    )\n}\n\nexport default OperationSection\n\n","import React, { Component } from 'react'\nimport OperationSection from './../../../components/OperationSection'\nimport { connect } from 'react-redux';\n\nclass OperationSectionView extends Component {\n  render() {\n\n    const { device_name, data_device } = this.props\n \n    return (\n      <OperationSection\n        device_name = { device_name }\n        data_device = { data_device }\n      />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  device_name : state.device_selected,\n  data_device : state.devices[state.device_selected]\n})\n\nconst mapDispatchToProps = null\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationSectionView)\n","import React, { Component} from 'react';\nimport { Row, Col } from 'antd';\nimport DeviceSectionView from './../../views/UserInterfacePage/SectionDevicesView'\nimport DeviceRegisterView from './../../views/UserInterfacePage/FormDeviceView'\nimport OperationSectionView from './../../views/UserInterfacePage/OperationSectionView'\nimport Footer from './../UserInterface/DefaultFooter'\n\nclass Dashboard extends Component {\n  \n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\" lg=\"0\">\n            <DeviceSectionView />\n          </Col>           \n        </Row>\n       \n        <Row>\n          <Col xs=\"12\" sm=\"6\">\n            <DeviceRegisterView />\n          </Col>\n        </Row>\n\n        <Row justify = 'center' span = {20}>\n          <Col>\n            <OperationSectionView />\n          </Col>\n        </Row>\n\n        <Row justify = 'center' span = {20}>\n          <Col>\n            <Footer />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;"],"sourceRoot":""}